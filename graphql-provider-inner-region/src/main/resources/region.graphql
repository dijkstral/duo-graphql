type Query {
    #通过ID获取行政区域信息
    byId(id: Int!): region_Region
    #通过城市拼音查询城市信息
    byPinYin(pinYin: String!): region_Region
    #获取前count的城市列表
    cityList(filter: region_cityListRequest): [region_Region]
    #获取某个行政区域的下级信息
    children(id: Int!): [region_Region]
    #搜索区域、板块关键词
    searchRegion(cityId: Int!, keyword: String): [region_Region]
}

type region_Region {
    #行政区域ID
    id: Int
    #父级ID
    parentId: Int
    #行政区域名称
    name: String
    #拼音全拼
    pinYin: String
    #拼音简写
    py: String
    #级别：1=城市 2=区域 3=商圈
    level: Int
    #得分，得分越高排越前
    score: Int
    #经纬度信息
    gps: region_Gps
    #是否开通新房，仅城市级别有值 1=有 其它＝无
    xf: Int
    #新房数量
    xfCount: Int
    #是否开通二手房，仅城市级别有值 1=有 其它＝无
    esf: Int
    #二手房数量
    esfCount: Int
    #是否开通多多金融
    jr: Int
    #是否开通租房业务
    zf: Int
    #租房房源数量
    zfCount: Int
    #是否有房价数据
    fj: Int
    #二手房均价
    fjValue: Int
    #是否开通问答
    ask: Int
    #是否有学校数据，仅城市级别有值 1=有 其它＝无
    school: Int
    #是否有成交数据，仅城市级别有值 1=有 其它＝无
    transaction: Int
    #成交记录数量
    transactionCount: Int
    #是否有小区数据：1有
    xq: Int
    #小区数量
    xqCount: Int
    #是否有地铁： 1=有 其它＝无
    dt: Int
    #城市是否开通： 1＝开通 其它＝未开通
    publishStatus: Int
    #城市是否有经纪人（仅level=1有值）：1=有 其它＝无
    jjr: Int
    #仅城市有值！省份名称
    provinceName: String
    #下级信息
    children: [region_Region]
    #父级信息
    parent: region_Region
}

type region_Gps{
    #纬度
    lat: Float
    #经度
    lng: Float
}

input region_cityListRequest {
    #为空时表示拉取全部城市，否则返回前count数量的城市
    count: Int
    #是否热门
    hot: Boolean
    #城市业务，支持：esf | xf | xq | cj | net
    biz: String
}