#服务端口号
server.port = 12345

spring.profiles.active=dev

logging.path=./logs


#Graphql服务接口名称，即是graphql请求入口：http://127.0.0.1:12345/graphql
graphql.url = graphql

#全局的provider调用地址，如果GraphQL Provider没有指定自己的地址时，会使用当前地址，比如在使用Mesh Service时可使用
#fdd.graphql.server.url = http://web-mesh-gw

#注册中心默认路径，如果是使用redis时，即为redis的keys前缀
fdd.graphql.register.root = graphql-dev

## 需要透传到各服务的请求头，下面的请求头，会透传给各GraphQL Provider
## 引擎本身不做鉴权工作，而是交给各Provider实现，多个使用半角逗号分隔
graphql.query.headers = user-id,client,trace-id

## 指定各GraphQL Provider数据提供端的服务地址（如果未指定，则使用各服务里配置的地址）
## 本配置主要用于多个GraphQL Provider场景，在本地开发时，可以只启动你正在开发或调试的服务
## 其它GraphQL Provider服务可以指向开发服务器或测试服务器
#graphql.provider.providerService[article.graphql.duo]=http://127.0.0.1:12347
#graphql.provider.providerService[user.graphql.duo]=http://127.0.0.1:12348

## 多个Schema时，指定url路由与schema的关系，GraphQL Provider未指定时，默认是注册到default
graphql.provider.urlSchemaMap[/graphql]=default


## redis配置
## redis配置 --哨兵模式配置
#spring.redis.host=sentinel01.redis.ip.fdd:26379;sentinel02.redis.ip.fdd:26379;sentinel03.redis.ip.fdd:26379
#spring.redis.type=sentinel
#spring.redis.master-name=redis.ip.fdd


## redis配置 --集群模式配置
#spring.redis.host=redis1.cp.fdd:6380;redis2.cp.fdd:6380;redis3.cp.fdd:6380;redis1.cp.fdd:6379;redis2.cp.fdd:6379;redis3.cp.fdd:6379
#spring.redis.type=cluster


## redis配置 --单机模式配置
spring.redis.host=127.0.0.1:6379
spring.redis.type=standalone
#spring.redis.password=123456

##Redis通用配置##
#连接超时，单位：毫秒
spring.redis.connectTimeout=2000

#读取超时，单位：毫秒
spring.redis.readTimeout=2000